###无别名通用datatable的sql
#define dbCondition(conditions)
	#@dbCondition_alias(conditions,null,null)
#end
###表中有别名通用datatable的sql
#define dbCondition_alias(conditions,mainAlias,aliasMap)
	#if( conditions )
		#set(whereCond = conditions["whereCond"])
		#if( whereCond )
			AND ( 1=0 
			#for(wc : whereCond)
			 	OR 
			 	#if( mainAlias && aliasMap )
			 		#set(aliasMapVal = aliasMap[wc.key])
				 	#if( aliasMapVal ) #(aliasMapVal)
				 	#else #(mainAlias).`#(wc.key)` 
				 	#end
				#else
					`#(wc.key)` 
				#end
			 	LIKE BINARY '%#(wc.value)%'
			#end
			 )
		#end
		
		#set(limitCond = conditions["limitCond"])
		#if( limitCond )
			#for(lc : limitCond)
			 	AND 
			 	#if( mainAlias && aliasMap )
			 		#set(aliasMapVal = aliasMap[lc.key])
				 	#if( aliasMapVal ) #(aliasMapVal)
				 	#else #(mainAlias).#(lc.key)  
				 	#end
				#else
					#(lc.key) 
				#end
			 	#(lc.value) 
			#end
		#end
			
		#set(orderbyCond = conditions["orderbyCond"])
		#if( orderbyCond )
			#for(obc : orderbyCond)
				#(for.index > 0 ? ",":"ORDER BY") 
				#if( mainAlias && aliasMap )
			 		#set(aliasMapVal = aliasMap[obc.key])
				 	#if( aliasMapVal ) #(aliasMapVal)
				 	#else #(mainAlias).`#(obc.key)`  
				 	#end
				#else
					`#(obc.key)` 
				#end
				#(obc.value)
			#end
		#end
	#end
	#if( only )
		limit #(only)
	#end
#end

#namespace("admin")
	#sql("list")
		#set(mainAlias = "a")
		#set(aliasMap = {"ROLE_NAME":"r.`NAME`"})
		SELECT a.*,r.`NAME` AS ROLE_NAME FROM t_admin AS a
		LEFT JOIN t_role AS r ON r.ID = ROLE_ID 
		WHERE 1=1 
		#@dbCondition_alias(conditions,mainAlias,aliasMap)
	#end
#end

#namespace("role")
	#sql("list")
		SELECT * FROM t_role WHERE 1=1 
		#@dbCondition(conditions)
	#end
#end

#namespace("user")
	#sql("list")
		SELECT *,CASE WHEN SEX=1 THEN '男' WHEN SEX =2 THEN '女' ELSE '未知' END AS SEXSTR 
		FROM t_user WHERE 1=1 
		#@dbCondition(conditions)
	#end
#end


#namespace("customer")
	#sql("list")
		SELECT *
		FROM t_customer 
		WHERE 1=1
		#@dbCondition(conditions)
	#end
#end

#namespace("menu")
	#sql("list")
		SELECT *
		FROM t_menu 
		WHERE 1=1 
		#@dbCondition(conditions)
	#end
#end

#namespace("log")
	#sql("list")
	#set(mainAlias = "d")
		#set(aliasMap = {"ADMIN_NAME":"t.`NAME`"})
		SELECT
	d.*, t. NAME AS ADMIN_NAME
	FROM
	t_log AS d
	LEFT JOIN t_admin t ON d.ADMIN_ID = t.ID
	WHERE 1=1
		#@dbCondition_alias(conditions,mainAlias,aliasMap)
	#end
#end

#namespace("food")
	#sql("list")
		#set(aliasMap = {"SHOP_NAME":"t.`NAME`"})
		#set(aliasMap = {"TYPE_NAME":"c.`NAME`"})
		SELECT
	d.*, t. NAME AS SHOP_NAME,c.NAME AS TYPE_NAME
	FROM
	t_food AS d
	LEFT JOIN t_shop t ON d.SHOP_ID = t.ID
	LEFT JOIN t_food_type c ON d.TYPE_ID = c.ID
	WHERE 1=1 AND d.STATE>-1
		#@dbCondition_alias(conditions,mainAlias,aliasMap)
	#end
	#sql("histroy")
		SELECT	*
	FROM
	t_food_histroy
	WHERE 1=1
		#@dbCondition_alias(conditions,mainAlias,aliasMap)
	#end
#end
#namespace("foodType")
	#sql("list")
		#set(aliasMap = {"SHOP_NAME":"t.`NAME`"})
		SELECT
	d.*, t. NAME AS SHOP_NAME , ifnull(f.FOOD_COUNT,'0') AS FOOD_COUNT
	FROM
	T_FOOD_TYPE AS d
	LEFT JOIN t_shop t ON d.SHOP_ID = t.ID
	LEFT JOIN (SELECT COUNT(1) FOOD_COUNT,TYPE_ID FROM T_FOOD GROUP BY TYPE_ID) f ON d.ID = f.TYPE_ID
	WHERE 1=1 AND d.DELETED=0
		#@dbCondition_alias(conditions,mainAlias,aliasMap)
	#end
#end
#namespace("order")
	#sql("listActive")
		#set(aliasMap = {"SHOP_NAME":"t.`NAME`"})
		#set(aliasMap = {"DELIVERY_NAME":"c.`NAME`"})
		SELECT
	d.*, t. NAME AS SHOP_NAME,c.NAME AS DELIVERY_NAME,IFNULL(cc1.`NAME`,cc2.`NAME`) as STATESTRING
	FROM
	t_order AS d
	LEFT JOIN t_shop t ON d.SHOP_ID = t.ID
	LEFT JOIN t_delivery c ON d.DELIVERY_ID=c.ID
	LEFT JOIN t_dict_code cc1 ON cc1.FIELD='t_order.CANCEL_STATE' and d.CANCEL_STATE=cc1.`CODE` 
	LEFT JOIN t_dict_code cc2 ON cc2.FIELD='t_order.ORDER_STATE' and d.ORDER_STATE=cc2.`CODE` 
	WHERE 1=1 AND ((d.ORDER_STATE='2' AND d.CANCEL_STATE!='2') OR d.CANCEL_STATE='0') 
		#@dbCondition_alias(conditions,mainAlias,aliasMap)
	#end
	#sql("listAll")
		#set(aliasMap = {"SHOP_NAME":"t.`NAME`"})
		#set(aliasMap = {"DELIVERY_NAME":"c.`NAME`"})
		SELECT
	d.*, t. NAME AS SHOP_NAME,c.NAME AS DELIVERY_NAME,IFNULL(cc1.`NAME`,cc2.`NAME`) as STATESTRING
	FROM
	t_order AS d
	LEFT JOIN t_shop t ON d.SHOP_ID = t.ID
	LEFT JOIN t_delivery c ON d.DELIVERY_ID=c.ID
	LEFT JOIN t_dict_code cc1 ON cc1.FIELD='t_order.CANCEL_STATE' and d.CANCEL_STATE=cc1.`CODE` 
	LEFT JOIN t_dict_code cc2 ON cc2.FIELD='t_order.ORDER_STATE' and d.ORDER_STATE=cc2.`CODE` 
	WHERE 1=1
		#@dbCondition_alias(conditions,mainAlias,aliasMap)
	#end
#end

#namespace("delivery")
	#sql("list")
		#set(aliasMap = {"CITY":"t.`NAME`"})
		#set(aliasMap = {"STATESTRING":"c.`NAME`"})
		SELECT
	d.*, t.NAME AS CITY,c.NAME AS STATESTRING
	FROM
	t_delivery AS d
	LEFT JOIN region_code t ON d.PCCODE = t.CODE
	LEFT JOIN t_dict_code c ON d.STATE = c.CODE AND c.FIELD='t_delivery.STATE'
	WHERE 1=1
		#@dbCondition_alias(conditions,mainAlias,aliasMap)
	#end
#end
#namespace("shop")
	#sql("list")
		#set(mainAlias = "s")
		#set(aliasMap = {"STATE_NAME":"d.`NAME`"})
		SELECT s.*,d.`NAME` AS STATE_NAME 
		FROM t_shop AS s
		LEFT JOIN t_dict_code AS d
		ON s.STATE = d.`CODE` 
		WHERE d.FIELD = 't_shop.STATE' 
		#@dbCondition_alias(conditions,mainAlias,aliasMap)
	#end
	#sql("audit")
		#set(mainAlias = "s")
		#set(aliasMap = {"STATE_NAME":"d.`NAME`"})
		SELECT s.*,d.`NAME` AS STATE_NAME 
		FROM t_shop AS s
		LEFT JOIN t_dict_code AS d
		ON s.AUDIT_STATE = d.`CODE` 
		WHERE d.FIELD = 't_shop.AUDIT_STATE' 
		#@dbCondition_alias(conditions,mainAlias,aliasMap)
	#end
#end

#namespace("shopType")
	#sql("list")
		SELECT *
		FROM t_shop_type
		WHERE 1=1 
		#if(not_deleted)
		AND `DELETED` !=1
		#end
		#@dbCondition(conditions)
	#end
#end

#namespace("shopTyperRelations")
	#sql("getShopType")
		SELECT st.`NAME` AS TYPE_NAME,st.ICON AS TYPE_ICON,st.ID AS ID
		FROM t_shop_type_relation AS str
		LEFT JOIN t_shop_type AS st 
		ON str.TYPEID = st.ID
		WHERE str.SHOPID =?
	#end
	#sql("getRelation")
		SELECT * FROM t_shop_type_relation WHERE TYPEID=? AND SHOPID=?
	#end
#end

#namespace("feedback")
	#sql("list")
		SELECT *
		FROM t_feedback 
		WHERE 1=1 
		#@dbCondition(conditions)
	#end
#end

#namespace("dictCode")
	#sql("name")
		SELECT `NAME`,`CODE` 
		FROM t_dict_code 
		WHERE FIELD = '#(field)'
		#if(codes)
		AND `CODE` IN ( 
			#for(code : codes)
				#(for.index > 0 ? ",":"")'#(code)' 
			#end
			)
		#end
	#end
#end